{"id":"node_modules/solc/wrapper.js","dependencies":[{"name":"/home/nick/github/ethtoolbox/package.json","includedInParent":true,"mtime":1554906426801},{"name":"/home/nick/github/ethtoolbox/node_modules/solc/package.json","includedInParent":true,"mtime":1554906694122},{"name":"assert","loc":{"line":1,"column":21},"parent":"/home/nick/github/ethtoolbox/node_modules/solc/wrapper.js","resolved":"/home/nick/.npm-global/lib/node_modules/parcel-bundler/node_modules/assert/assert.js"},{"name":"./translate.js","loc":{"line":2,"column":24},"parent":"/home/nick/github/ethtoolbox/node_modules/solc/wrapper.js","resolved":"/home/nick/github/ethtoolbox/node_modules/solc/translate.js"},{"name":"require-from-string","loc":{"line":3,"column":32},"parent":"/home/nick/github/ethtoolbox/node_modules/solc/wrapper.js","resolved":"/home/nick/github/ethtoolbox/node_modules/require-from-string/index.js"},{"name":"https","loc":{"line":4,"column":20},"parent":"/home/nick/github/ethtoolbox/node_modules/solc/wrapper.js","resolved":"/home/nick/.npm-global/lib/node_modules/parcel-bundler/node_modules/https-browserify/index.js"},{"name":"memorystream","loc":{"line":5,"column":27},"parent":"/home/nick/github/ethtoolbox/node_modules/solc/wrapper.js","resolved":"/home/nick/github/ethtoolbox/node_modules/memorystream/index.js"}],"generated":{"js":"var assert = require('assert');\nvar translate = require('./translate.js');\nvar requireFromString = require('require-from-string');\nvar https = require('https');\nvar MemoryStream = require('memorystream');\n\nfunction setupMethods (soljson) {\n  var copyString = function (str, ptr) {\n    var length = soljson.lengthBytesUTF8(str);\n    var buffer = soljson._malloc(length + 1);\n    soljson.stringToUTF8(str, buffer, length + 1);\n    soljson.setValue(ptr, buffer, '*');\n  };\n\n  var wrapCallback = function (callback) {\n    assert(typeof callback === 'function', 'Invalid callback specified.');\n    return function (path, contents, error) {\n      var result = callback(soljson.Pointer_stringify(path));\n      if (typeof result.contents === 'string') {\n        copyString(result.contents, contents);\n      }\n      if (typeof result.error === 'string') {\n        copyString(result.error, error);\n      }\n    };\n  };\n\n  // This calls compile() with args || cb\n  var runWithReadCallback = function (readCallback, compile, args) {\n    if (readCallback === undefined) {\n      readCallback = function (path) {\n        return {\n          error: 'File import callback not supported'\n        };\n      };\n    }\n\n    // This is to support multiple versions of Emscripten.\n    var addFunction = soljson.addFunction || soljson.Runtime.addFunction;\n    var removeFunction = soljson.removeFunction || soljson.Runtime.removeFunction;\n\n    var cb = addFunction(wrapCallback(readCallback));\n    var output;\n    try {\n      args.push(cb);\n      output = compile.apply(undefined, args);\n    } catch (e) {\n      removeFunction(cb);\n      throw e;\n    }\n    removeFunction(cb);\n    return output;\n  };\n\n  var compileJSON = null;\n  if ('_compileJSON' in soljson) {\n    compileJSON = soljson.cwrap('compileJSON', 'string', ['string', 'number']);\n  }\n\n  var compileJSONMulti = null;\n  if ('_compileJSONMulti' in soljson) {\n    compileJSONMulti = soljson.cwrap('compileJSONMulti', 'string', ['string', 'number']);\n  }\n\n  var compileJSONCallback = null;\n  if ('_compileJSONCallback' in soljson) {\n    var compileInternal = soljson.cwrap('compileJSONCallback', 'string', ['string', 'number', 'number']);\n    compileJSONCallback = function (input, optimize, readCallback) {\n      return runWithReadCallback(readCallback, compileInternal, [ input, optimize ]);\n    };\n  }\n\n  var compileStandard = null;\n  if ('_compileStandard' in soljson) {\n    var compileStandardInternal = soljson.cwrap('compileStandard', 'string', ['string', 'number']);\n    compileStandard = function (input, readCallback) {\n      return runWithReadCallback(readCallback, compileStandardInternal, [ input ]);\n    };\n  }\n  if ('_solidity_compile' in soljson) {\n    var solidityCompile = soljson.cwrap('solidity_compile', 'string', ['string', 'number']);\n    compileStandard = function (input, readCallback) {\n      return runWithReadCallback(readCallback, solidityCompile, [ input ]);\n    };\n  }\n\n  // Expects a Standard JSON I/O but supports old compilers\n  var compileStandardWrapper = function (input, readCallback) {\n    if (compileStandard !== null) {\n      return compileStandard(input, readCallback);\n    }\n\n    function formatFatalError (message) {\n      return JSON.stringify({\n        errors: [\n          {\n            'type': 'SOLCError',\n            'component': 'solcjs',\n            'severity': 'error',\n            'message': message,\n            'formattedMessage': 'Error: ' + message\n          }\n        ]\n      });\n    }\n\n    if (readCallback !== undefined && typeof readCallback !== 'function') {\n      return formatFatalError('Invalid import callback supplied');\n    }\n\n    try {\n      input = JSON.parse(input);\n    } catch (e) {\n      return formatFatalError('Invalid JSON supplied: ' + e.message);\n    }\n\n    if (input['language'] !== 'Solidity') {\n      return formatFatalError('Only Solidity sources are supported');\n    }\n\n    // NOTE: this is deliberately `== null`\n    if (input['sources'] == null || input['sources'].length === 0) {\n      return formatFatalError('No input specified');\n    }\n\n    // Bail out early\n    if ((input['sources'].length > 1) && (compileJSONMulti === null)) {\n      return formatFatalError('Multiple sources provided, but compiler only supports single input');\n    }\n\n    function isOptimizerEnabled (input) {\n      return input['settings'] && input['settings']['optimizer'] && input['settings']['optimizer']['enabled'];\n    }\n\n    function translateSources (input) {\n      var sources = {};\n      for (var source in input['sources']) {\n        if (input['sources'][source]['content'] !== null) {\n          sources[source] = input['sources'][source]['content'];\n        } else {\n          // force failure\n          return null;\n        }\n      }\n      return sources;\n    }\n\n    function librariesSupplied (input) {\n      if (input['settings'] !== null) {\n        return input['settings']['libraries'];\n      }\n    }\n\n    function translateOutput (output, libraries) {\n      try {\n        output = JSON.parse(output);\n      } catch (e) {\n        return formatFatalError('Compiler returned invalid JSON: ' + e.message);\n      }\n      output = translate.translateJsonCompilerOutput(output, libraries);\n      if (output == null) {\n        return formatFatalError('Failed to process output');\n      }\n      return JSON.stringify(output);\n    }\n\n    var sources = translateSources(input);\n    if (sources === null || Object.keys(sources).length === 0) {\n      return formatFatalError('Failed to process sources');\n    }\n\n    // Try linking if libraries were supplied\n    var libraries = librariesSupplied(input);\n\n    // Try to wrap around old versions\n    if (compileJSONCallback !== null) {\n      return translateOutput(compileJSONCallback(JSON.stringify({ 'sources': sources }), isOptimizerEnabled(input), readCallback), libraries);\n    }\n\n    if (compileJSONMulti !== null) {\n      return translateOutput(compileJSONMulti(JSON.stringify({ 'sources': sources }), isOptimizerEnabled(input)), libraries);\n    }\n\n    // Try our luck with an ancient compiler\n    if (compileJSON !== null) {\n      return translateOutput(compileJSON(sources[Object.keys(sources)[0]], isOptimizerEnabled(input)), libraries);\n    }\n\n    return formatFatalError('Compiler does not support any known interface.');\n  };\n\n  var version;\n  if ('_solidity_version' in soljson) {\n    version = soljson.cwrap('solidity_version', 'string', []);\n  } else {\n    version = soljson.cwrap('version', 'string', []);\n  }\n\n  var versionToSemver = function () {\n    return translate.versionToSemver(version());\n  };\n\n  var license;\n  if ('_solidity_license' in soljson) {\n    license = soljson.cwrap('solidity_license', 'string', []);\n  } else if ('_license' in soljson) {\n    license = soljson.cwrap('license', 'string', []);\n  } else {\n    // pre 0.4.14\n    license = function () {\n      // return undefined\n    };\n  }\n\n  return {\n    version: version,\n    semver: versionToSemver,\n    license: license,\n    lowlevel: {\n      compileSingle: compileJSON,\n      compileMulti: compileJSONMulti,\n      compileCallback: compileJSONCallback,\n      compileStandard: compileStandard\n    },\n    features: {\n      legacySingleInput: compileJSON !== null,\n      multipleInputs: compileJSONMulti !== null || compileStandard !== null,\n      importCallback: compileJSONCallback !== null || compileStandard !== null,\n      nativeStandardJSON: compileStandard !== null\n    },\n    compile: compileStandardWrapper,\n    // Temporary wrappers to minimise breaking with other projects.\n    // NOTE: to be removed in 0.5.2\n    compileStandard: compileStandardWrapper,\n    compileStandardWrapper: compileStandardWrapper,\n    // Loads the compiler of the given version from the github repository\n    // instead of from the local filesystem.\n    loadRemoteVersion: function (versionString, cb) {\n      var mem = new MemoryStream(null, {readable: false});\n      var url = 'https://ethereum.github.io/solc-bin/bin/soljson-' + versionString + '.js';\n      https.get(url, function (response) {\n        if (response.statusCode !== 200) {\n          cb(new Error('Error retrieving binary: ' + response.statusMessage));\n        } else {\n          response.pipe(mem);\n          response.on('end', function () {\n            cb(null, setupMethods(requireFromString(mem.toString(), 'soljson-' + versionString + '.js')));\n          });\n        }\n      }).on('error', function (error) {\n        cb(error);\n      });\n    },\n    // Use this if you want to add wrapper functions around the pure module.\n    setupMethods: setupMethods\n  };\n}\n\nmodule.exports = setupMethods;\n","map":{"mappings":[{"source":"node_modules/solc/wrapper.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules/solc/wrapper.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}}],"sources":{"node_modules/solc/wrapper.js":"var assert = require('assert');\nvar translate = require('./translate.js');\nvar requireFromString = require('require-from-string');\nvar https = require('https');\nvar MemoryStream = require('memorystream');\n\nfunction setupMethods (soljson) {\n  var copyString = function (str, ptr) {\n    var length = soljson.lengthBytesUTF8(str);\n    var buffer = soljson._malloc(length + 1);\n    soljson.stringToUTF8(str, buffer, length + 1);\n    soljson.setValue(ptr, buffer, '*');\n  };\n\n  var wrapCallback = function (callback) {\n    assert(typeof callback === 'function', 'Invalid callback specified.');\n    return function (path, contents, error) {\n      var result = callback(soljson.Pointer_stringify(path));\n      if (typeof result.contents === 'string') {\n        copyString(result.contents, contents);\n      }\n      if (typeof result.error === 'string') {\n        copyString(result.error, error);\n      }\n    };\n  };\n\n  // This calls compile() with args || cb\n  var runWithReadCallback = function (readCallback, compile, args) {\n    if (readCallback === undefined) {\n      readCallback = function (path) {\n        return {\n          error: 'File import callback not supported'\n        };\n      };\n    }\n\n    // This is to support multiple versions of Emscripten.\n    var addFunction = soljson.addFunction || soljson.Runtime.addFunction;\n    var removeFunction = soljson.removeFunction || soljson.Runtime.removeFunction;\n\n    var cb = addFunction(wrapCallback(readCallback));\n    var output;\n    try {\n      args.push(cb);\n      output = compile.apply(undefined, args);\n    } catch (e) {\n      removeFunction(cb);\n      throw e;\n    }\n    removeFunction(cb);\n    return output;\n  };\n\n  var compileJSON = null;\n  if ('_compileJSON' in soljson) {\n    compileJSON = soljson.cwrap('compileJSON', 'string', ['string', 'number']);\n  }\n\n  var compileJSONMulti = null;\n  if ('_compileJSONMulti' in soljson) {\n    compileJSONMulti = soljson.cwrap('compileJSONMulti', 'string', ['string', 'number']);\n  }\n\n  var compileJSONCallback = null;\n  if ('_compileJSONCallback' in soljson) {\n    var compileInternal = soljson.cwrap('compileJSONCallback', 'string', ['string', 'number', 'number']);\n    compileJSONCallback = function (input, optimize, readCallback) {\n      return runWithReadCallback(readCallback, compileInternal, [ input, optimize ]);\n    };\n  }\n\n  var compileStandard = null;\n  if ('_compileStandard' in soljson) {\n    var compileStandardInternal = soljson.cwrap('compileStandard', 'string', ['string', 'number']);\n    compileStandard = function (input, readCallback) {\n      return runWithReadCallback(readCallback, compileStandardInternal, [ input ]);\n    };\n  }\n  if ('_solidity_compile' in soljson) {\n    var solidityCompile = soljson.cwrap('solidity_compile', 'string', ['string', 'number']);\n    compileStandard = function (input, readCallback) {\n      return runWithReadCallback(readCallback, solidityCompile, [ input ]);\n    };\n  }\n\n  // Expects a Standard JSON I/O but supports old compilers\n  var compileStandardWrapper = function (input, readCallback) {\n    if (compileStandard !== null) {\n      return compileStandard(input, readCallback);\n    }\n\n    function formatFatalError (message) {\n      return JSON.stringify({\n        errors: [\n          {\n            'type': 'SOLCError',\n            'component': 'solcjs',\n            'severity': 'error',\n            'message': message,\n            'formattedMessage': 'Error: ' + message\n          }\n        ]\n      });\n    }\n\n    if (readCallback !== undefined && typeof readCallback !== 'function') {\n      return formatFatalError('Invalid import callback supplied');\n    }\n\n    try {\n      input = JSON.parse(input);\n    } catch (e) {\n      return formatFatalError('Invalid JSON supplied: ' + e.message);\n    }\n\n    if (input['language'] !== 'Solidity') {\n      return formatFatalError('Only Solidity sources are supported');\n    }\n\n    // NOTE: this is deliberately `== null`\n    if (input['sources'] == null || input['sources'].length === 0) {\n      return formatFatalError('No input specified');\n    }\n\n    // Bail out early\n    if ((input['sources'].length > 1) && (compileJSONMulti === null)) {\n      return formatFatalError('Multiple sources provided, but compiler only supports single input');\n    }\n\n    function isOptimizerEnabled (input) {\n      return input['settings'] && input['settings']['optimizer'] && input['settings']['optimizer']['enabled'];\n    }\n\n    function translateSources (input) {\n      var sources = {};\n      for (var source in input['sources']) {\n        if (input['sources'][source]['content'] !== null) {\n          sources[source] = input['sources'][source]['content'];\n        } else {\n          // force failure\n          return null;\n        }\n      }\n      return sources;\n    }\n\n    function librariesSupplied (input) {\n      if (input['settings'] !== null) {\n        return input['settings']['libraries'];\n      }\n    }\n\n    function translateOutput (output, libraries) {\n      try {\n        output = JSON.parse(output);\n      } catch (e) {\n        return formatFatalError('Compiler returned invalid JSON: ' + e.message);\n      }\n      output = translate.translateJsonCompilerOutput(output, libraries);\n      if (output == null) {\n        return formatFatalError('Failed to process output');\n      }\n      return JSON.stringify(output);\n    }\n\n    var sources = translateSources(input);\n    if (sources === null || Object.keys(sources).length === 0) {\n      return formatFatalError('Failed to process sources');\n    }\n\n    // Try linking if libraries were supplied\n    var libraries = librariesSupplied(input);\n\n    // Try to wrap around old versions\n    if (compileJSONCallback !== null) {\n      return translateOutput(compileJSONCallback(JSON.stringify({ 'sources': sources }), isOptimizerEnabled(input), readCallback), libraries);\n    }\n\n    if (compileJSONMulti !== null) {\n      return translateOutput(compileJSONMulti(JSON.stringify({ 'sources': sources }), isOptimizerEnabled(input)), libraries);\n    }\n\n    // Try our luck with an ancient compiler\n    if (compileJSON !== null) {\n      return translateOutput(compileJSON(sources[Object.keys(sources)[0]], isOptimizerEnabled(input)), libraries);\n    }\n\n    return formatFatalError('Compiler does not support any known interface.');\n  };\n\n  var version;\n  if ('_solidity_version' in soljson) {\n    version = soljson.cwrap('solidity_version', 'string', []);\n  } else {\n    version = soljson.cwrap('version', 'string', []);\n  }\n\n  var versionToSemver = function () {\n    return translate.versionToSemver(version());\n  };\n\n  var license;\n  if ('_solidity_license' in soljson) {\n    license = soljson.cwrap('solidity_license', 'string', []);\n  } else if ('_license' in soljson) {\n    license = soljson.cwrap('license', 'string', []);\n  } else {\n    // pre 0.4.14\n    license = function () {\n      // return undefined\n    };\n  }\n\n  return {\n    version: version,\n    semver: versionToSemver,\n    license: license,\n    lowlevel: {\n      compileSingle: compileJSON,\n      compileMulti: compileJSONMulti,\n      compileCallback: compileJSONCallback,\n      compileStandard: compileStandard\n    },\n    features: {\n      legacySingleInput: compileJSON !== null,\n      multipleInputs: compileJSONMulti !== null || compileStandard !== null,\n      importCallback: compileJSONCallback !== null || compileStandard !== null,\n      nativeStandardJSON: compileStandard !== null\n    },\n    compile: compileStandardWrapper,\n    // Temporary wrappers to minimise breaking with other projects.\n    // NOTE: to be removed in 0.5.2\n    compileStandard: compileStandardWrapper,\n    compileStandardWrapper: compileStandardWrapper,\n    // Loads the compiler of the given version from the github repository\n    // instead of from the local filesystem.\n    loadRemoteVersion: function (versionString, cb) {\n      var mem = new MemoryStream(null, {readable: false});\n      var url = 'https://ethereum.github.io/solc-bin/bin/soljson-' + versionString + '.js';\n      https.get(url, function (response) {\n        if (response.statusCode !== 200) {\n          cb(new Error('Error retrieving binary: ' + response.statusMessage));\n        } else {\n          response.pipe(mem);\n          response.on('end', function () {\n            cb(null, setupMethods(requireFromString(mem.toString(), 'soljson-' + versionString + '.js')));\n          });\n        }\n      }).on('error', function (error) {\n        cb(error);\n      });\n    },\n    // Use this if you want to add wrapper functions around the pure module.\n    setupMethods: setupMethods\n  };\n}\n\nmodule.exports = setupMethods;\n"},"lineCount":260}},"hash":"d784c9d41eba9e6b8c9d2d71d2965aef","cacheData":{"env":{}}}