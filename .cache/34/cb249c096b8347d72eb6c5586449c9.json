{"id":"node_modules/solc/translate.js","dependencies":[{"name":"/home/nick/github/ethtoolbox/package.json","includedInParent":true,"mtime":1554906426801},{"name":"/home/nick/github/ethtoolbox/node_modules/solc/package.json","includedInParent":true,"mtime":1554906694122},{"name":"./linker.js","loc":{"line":1,"column":21},"parent":"/home/nick/github/ethtoolbox/node_modules/solc/translate.js","resolved":"/home/nick/github/ethtoolbox/node_modules/solc/linker.js"}],"generated":{"js":"var linker = require('./linker.js');\n\n/// Translate old style version numbers to semver.\n/// Old style: 0.3.6-3fc68da5/Release-Emscripten/clang\n///            0.3.5-371690f0/Release-Emscripten/clang/Interpreter\n///            0.2.0-e7098958/.-Emscripten/clang/int linked to libethereum-1.1.1-bbb80ab0/.-Emscripten/clang/int\n///            0.1.3-0/.-/clang/int linked to libethereum-0.9.92-0/.-/clang/int\n///            0.1.2-5c3bfd4b*/.-/clang/int\n///            0.1.1-6ff4cd6b/RelWithDebInfo-Emscripten/clang/int\n/// New style: 0.4.5+commit.b318366e.Emscripten.clang\nfunction versionToSemver (version) {\n  // FIXME: parse more detail, but this is a good start\n  var parsed = version.match(/^([0-9]+\\.[0-9]+\\.[0-9]+)-([0-9a-f]{8})[/*].*$/);\n  if (parsed) {\n    return parsed[1] + '+commit.' + parsed[2];\n  }\n  if (version.indexOf('0.1.3-0') !== -1) {\n    return '0.1.3';\n  }\n  // assume it is already semver compatible\n  return version;\n}\n\nfunction translateErrors (ret, errors) {\n  for (var error in errors) {\n    var type = 'error';\n    var extractType = /^(.*):(\\d+):(\\d+):(.*):/;\n    extractType = extractType.exec(errors[error]);\n    if (extractType) {\n      type = extractType[4].trim();\n    } else if (errors[error].indexOf(': Warning:')) {\n      type = 'Warning';\n    } else if (errors[error].indexOf(': Error:')) {\n      type = 'Error';\n    }\n    ret.push({\n      type: type,\n      component: 'general',\n      severity: (type === 'Warning') ? 'warning' : 'error',\n      message: errors[error],\n      formattedMessage: errors[error]\n    });\n  }\n}\n\nfunction translateGasEstimates (gasEstimates) {\n  if (gasEstimates === null) {\n    return 'infinite';\n  }\n\n  if (typeof gasEstimates === 'number') {\n    return gasEstimates.toString();\n  }\n\n  var gasEstimatesTranslated = {};\n  for (var func in gasEstimates) {\n    gasEstimatesTranslated[func] = translateGasEstimates(gasEstimates[func]);\n  }\n  return gasEstimatesTranslated;\n}\n\nfunction translateJsonCompilerOutput (output, libraries) {\n  var ret = {};\n\n  ret['errors'] = [];\n  var errors;\n  if (output['error']) {\n    errors = [ output['error'] ];\n  } else {\n    errors = output['errors'];\n  }\n  translateErrors(ret['errors'], errors);\n\n  ret['contracts'] = {};\n  for (var contract in output['contracts']) {\n    // Split name first, can be `contract`, `:contract` or `filename:contract`\n    var tmp = contract.match(/^(([^:]*):)?([^:]+)$/);\n    if (tmp.length !== 4) {\n      // Force abort\n      return null;\n    }\n    var fileName = tmp[2];\n    if (fileName === undefined) {\n      // this is the case of `contract`\n      fileName = '';\n    }\n    var contractName = tmp[3];\n\n    var contractInput = output['contracts'][contract];\n\n    var gasEstimates = contractInput['gasEstimates'];\n    var translatedGasEstimates = {};\n\n    if (gasEstimates['creation']) {\n      translatedGasEstimates['creation'] = {\n        'codeDepositCost': translateGasEstimates(gasEstimates['creation'][1]),\n        'executionCost': translateGasEstimates(gasEstimates['creation'][0])\n      };\n    }\n    if (gasEstimates['internal']) {\n      translatedGasEstimates['internal'] = translateGasEstimates(gasEstimates['internal']);\n    }\n    if (gasEstimates['external']) {\n      translatedGasEstimates['external'] = translateGasEstimates(gasEstimates['external']);\n    }\n\n    var contractOutput = {\n      'abi': JSON.parse(contractInput['interface']),\n      'metadata': contractInput['metadata'],\n      'evm': {\n        'legacyAssembly': contractInput['assembly'],\n        'bytecode': {\n          'object': linker.linkBytecode(contractInput['bytecode'], libraries),\n          'opcodes': contractInput['opcodes'],\n          'sourceMap': contractInput['srcmap'],\n          'linkReferences': linker.findLinkReferences(contractInput['bytecode'])\n        },\n        'deployedBytecode': {\n          'object': linker.linkBytecode(contractInput['runtimeBytecode'], libraries),\n          'sourceMap': contractInput['srcmapRuntime'],\n          'linkReferences': linker.findLinkReferences(contractInput['runtimeBytecode'])\n        },\n        'methodIdentifiers': contractInput['functionHashes'],\n        'gasEstimates': translatedGasEstimates\n      }\n    };\n\n    if (!ret['contracts'][fileName]) {\n      ret['contracts'][fileName] = {};\n    }\n\n    ret['contracts'][fileName][contractName] = contractOutput;\n  }\n\n  var sourceMap = {};\n  for (var sourceId in output['sourceList']) {\n    sourceMap[output['sourceList'][sourceId]] = sourceId;\n  }\n\n  ret['sources'] = {};\n  for (var source in output['sources']) {\n    ret['sources'][source] = {\n      id: sourceMap[source],\n      legacyAST: output['sources'][source].AST\n    };\n  }\n\n  return ret;\n}\n\nfunction escapeString (text) {\n  return text\n    .replace(/\\n/g, '\\\\n')\n    .replace(/\\r/g, '\\\\r')\n    .replace(/\\t/g, '\\\\t');\n}\n\nfunction formatAssemblyText (asm, prefix, source) {\n  if (typeof asm === typeof '' || asm === null || asm === undefined) {\n    return prefix + (asm || '') + '\\n';\n  }\n  var text = prefix + '.code\\n';\n  asm['.code'].forEach(function (item, i) {\n    var v = item.value === undefined ? '' : item.value;\n    var src = '';\n    if (source !== undefined && item.begin !== undefined && item.end !== undefined) {\n      src = escapeString(source.slice(item.begin, item.end));\n    }\n    if (src.length > 30) {\n      src = src.slice(0, 30) + '...';\n    }\n    if (item.name !== 'tag') {\n      text += '  ';\n    }\n    text += prefix + item.name + ' ' + v + '\\t\\t\\t' + src + '\\n';\n  });\n  text += prefix + '.data\\n';\n  var asmData = asm['.data'] || [];\n  for (var i in asmData) {\n    var item = asmData[i];\n    text += '  ' + prefix + '' + i + ':\\n';\n    text += formatAssemblyText(item, prefix + '    ', source);\n  }\n  return text;\n}\n\nfunction prettyPrintLegacyAssemblyJSON (assembly, source) {\n  return formatAssemblyText(assembly, '', source);\n}\n\nmodule.exports = {\n  versionToSemver: versionToSemver,\n  translateJsonCompilerOutput: translateJsonCompilerOutput,\n  prettyPrintLegacyAssemblyJSON: prettyPrintLegacyAssemblyJSON\n};\n","map":{"mappings":[{"source":"node_modules/solc/translate.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/solc/translate.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}}],"sources":{"node_modules/solc/translate.js":"var linker = require('./linker.js');\n\n/// Translate old style version numbers to semver.\n/// Old style: 0.3.6-3fc68da5/Release-Emscripten/clang\n///            0.3.5-371690f0/Release-Emscripten/clang/Interpreter\n///            0.2.0-e7098958/.-Emscripten/clang/int linked to libethereum-1.1.1-bbb80ab0/.-Emscripten/clang/int\n///            0.1.3-0/.-/clang/int linked to libethereum-0.9.92-0/.-/clang/int\n///            0.1.2-5c3bfd4b*/.-/clang/int\n///            0.1.1-6ff4cd6b/RelWithDebInfo-Emscripten/clang/int\n/// New style: 0.4.5+commit.b318366e.Emscripten.clang\nfunction versionToSemver (version) {\n  // FIXME: parse more detail, but this is a good start\n  var parsed = version.match(/^([0-9]+\\.[0-9]+\\.[0-9]+)-([0-9a-f]{8})[/*].*$/);\n  if (parsed) {\n    return parsed[1] + '+commit.' + parsed[2];\n  }\n  if (version.indexOf('0.1.3-0') !== -1) {\n    return '0.1.3';\n  }\n  // assume it is already semver compatible\n  return version;\n}\n\nfunction translateErrors (ret, errors) {\n  for (var error in errors) {\n    var type = 'error';\n    var extractType = /^(.*):(\\d+):(\\d+):(.*):/;\n    extractType = extractType.exec(errors[error]);\n    if (extractType) {\n      type = extractType[4].trim();\n    } else if (errors[error].indexOf(': Warning:')) {\n      type = 'Warning';\n    } else if (errors[error].indexOf(': Error:')) {\n      type = 'Error';\n    }\n    ret.push({\n      type: type,\n      component: 'general',\n      severity: (type === 'Warning') ? 'warning' : 'error',\n      message: errors[error],\n      formattedMessage: errors[error]\n    });\n  }\n}\n\nfunction translateGasEstimates (gasEstimates) {\n  if (gasEstimates === null) {\n    return 'infinite';\n  }\n\n  if (typeof gasEstimates === 'number') {\n    return gasEstimates.toString();\n  }\n\n  var gasEstimatesTranslated = {};\n  for (var func in gasEstimates) {\n    gasEstimatesTranslated[func] = translateGasEstimates(gasEstimates[func]);\n  }\n  return gasEstimatesTranslated;\n}\n\nfunction translateJsonCompilerOutput (output, libraries) {\n  var ret = {};\n\n  ret['errors'] = [];\n  var errors;\n  if (output['error']) {\n    errors = [ output['error'] ];\n  } else {\n    errors = output['errors'];\n  }\n  translateErrors(ret['errors'], errors);\n\n  ret['contracts'] = {};\n  for (var contract in output['contracts']) {\n    // Split name first, can be `contract`, `:contract` or `filename:contract`\n    var tmp = contract.match(/^(([^:]*):)?([^:]+)$/);\n    if (tmp.length !== 4) {\n      // Force abort\n      return null;\n    }\n    var fileName = tmp[2];\n    if (fileName === undefined) {\n      // this is the case of `contract`\n      fileName = '';\n    }\n    var contractName = tmp[3];\n\n    var contractInput = output['contracts'][contract];\n\n    var gasEstimates = contractInput['gasEstimates'];\n    var translatedGasEstimates = {};\n\n    if (gasEstimates['creation']) {\n      translatedGasEstimates['creation'] = {\n        'codeDepositCost': translateGasEstimates(gasEstimates['creation'][1]),\n        'executionCost': translateGasEstimates(gasEstimates['creation'][0])\n      };\n    }\n    if (gasEstimates['internal']) {\n      translatedGasEstimates['internal'] = translateGasEstimates(gasEstimates['internal']);\n    }\n    if (gasEstimates['external']) {\n      translatedGasEstimates['external'] = translateGasEstimates(gasEstimates['external']);\n    }\n\n    var contractOutput = {\n      'abi': JSON.parse(contractInput['interface']),\n      'metadata': contractInput['metadata'],\n      'evm': {\n        'legacyAssembly': contractInput['assembly'],\n        'bytecode': {\n          'object': linker.linkBytecode(contractInput['bytecode'], libraries),\n          'opcodes': contractInput['opcodes'],\n          'sourceMap': contractInput['srcmap'],\n          'linkReferences': linker.findLinkReferences(contractInput['bytecode'])\n        },\n        'deployedBytecode': {\n          'object': linker.linkBytecode(contractInput['runtimeBytecode'], libraries),\n          'sourceMap': contractInput['srcmapRuntime'],\n          'linkReferences': linker.findLinkReferences(contractInput['runtimeBytecode'])\n        },\n        'methodIdentifiers': contractInput['functionHashes'],\n        'gasEstimates': translatedGasEstimates\n      }\n    };\n\n    if (!ret['contracts'][fileName]) {\n      ret['contracts'][fileName] = {};\n    }\n\n    ret['contracts'][fileName][contractName] = contractOutput;\n  }\n\n  var sourceMap = {};\n  for (var sourceId in output['sourceList']) {\n    sourceMap[output['sourceList'][sourceId]] = sourceId;\n  }\n\n  ret['sources'] = {};\n  for (var source in output['sources']) {\n    ret['sources'][source] = {\n      id: sourceMap[source],\n      legacyAST: output['sources'][source].AST\n    };\n  }\n\n  return ret;\n}\n\nfunction escapeString (text) {\n  return text\n    .replace(/\\n/g, '\\\\n')\n    .replace(/\\r/g, '\\\\r')\n    .replace(/\\t/g, '\\\\t');\n}\n\nfunction formatAssemblyText (asm, prefix, source) {\n  if (typeof asm === typeof '' || asm === null || asm === undefined) {\n    return prefix + (asm || '') + '\\n';\n  }\n  var text = prefix + '.code\\n';\n  asm['.code'].forEach(function (item, i) {\n    var v = item.value === undefined ? '' : item.value;\n    var src = '';\n    if (source !== undefined && item.begin !== undefined && item.end !== undefined) {\n      src = escapeString(source.slice(item.begin, item.end));\n    }\n    if (src.length > 30) {\n      src = src.slice(0, 30) + '...';\n    }\n    if (item.name !== 'tag') {\n      text += '  ';\n    }\n    text += prefix + item.name + ' ' + v + '\\t\\t\\t' + src + '\\n';\n  });\n  text += prefix + '.data\\n';\n  var asmData = asm['.data'] || [];\n  for (var i in asmData) {\n    var item = asmData[i];\n    text += '  ' + prefix + '' + i + ':\\n';\n    text += formatAssemblyText(item, prefix + '    ', source);\n  }\n  return text;\n}\n\nfunction prettyPrintLegacyAssemblyJSON (assembly, source) {\n  return formatAssemblyText(assembly, '', source);\n}\n\nmodule.exports = {\n  versionToSemver: versionToSemver,\n  translateJsonCompilerOutput: translateJsonCompilerOutput,\n  prettyPrintLegacyAssemblyJSON: prettyPrintLegacyAssemblyJSON\n};\n"},"lineCount":196}},"hash":"8c402015ffae02611f10da4e2d4ed2f2","cacheData":{"env":{}}}