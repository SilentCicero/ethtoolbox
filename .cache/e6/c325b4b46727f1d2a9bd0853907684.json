{"id":"node_modules/solc/linker.js","dependencies":[{"name":"/home/nick/github/ethtoolbox/package.json","includedInParent":true,"mtime":1554906426801},{"name":"/home/nick/github/ethtoolbox/node_modules/solc/package.json","includedInParent":true,"mtime":1554906694122},{"name":"keccak","loc":{"line":1,"column":21},"parent":"/home/nick/github/ethtoolbox/node_modules/solc/linker.js","resolved":"/home/nick/github/ethtoolbox/node_modules/keccak/js.js"}],"generated":{"js":"var keccak = require('keccak');\n\nfunction keccak256 (input) {\n  return keccak('keccak256').update(input).digest();\n}\n\nfunction libraryHashPlaceholder (input) {\n  return '$' + keccak256(input).toString('hex').slice(0, 34) + '$';\n}\n\nvar linkBytecode = function (bytecode, libraries) {\n  // NOTE: for backwards compatibility support old compiler which didn't use file names\n  var librariesComplete = {};\n  for (var libraryName in libraries) {\n    if (typeof libraries[libraryName] === 'object') {\n      // API compatible with the standard JSON i/o\n      for (var lib in libraries[libraryName]) {\n        librariesComplete[lib] = libraries[libraryName][lib];\n        librariesComplete[libraryName + ':' + lib] = libraries[libraryName][lib];\n      }\n    } else {\n      // backwards compatible API for early solc-js versions\n      var parsed = libraryName.match(/^([^:]+):(.+)$/);\n      if (parsed) {\n        librariesComplete[parsed[2]] = libraries[libraryName];\n      }\n      librariesComplete[libraryName] = libraries[libraryName];\n    }\n  }\n\n  for (libraryName in librariesComplete) {\n    var hexAddress = librariesComplete[libraryName];\n    if (hexAddress.slice(0, 2) !== '0x' || hexAddress.length > 42) {\n      throw new Error('Invalid address specified for ' + libraryName);\n    }\n    // remove 0x prefix\n    hexAddress = hexAddress.slice(2);\n    hexAddress = Array(40 - hexAddress.length + 1).join('0') + hexAddress;\n\n    // Support old (library name) and new (hash of library name)\n    // placeholders.\n    var replace = function (name) {\n      // truncate to 37 characters\n      var truncatedName = name.slice(0, 36);\n      var libLabel = '__' + truncatedName + Array(37 - truncatedName.length).join('_') + '__';\n      while (bytecode.indexOf(libLabel) >= 0) {\n        bytecode = bytecode.replace(libLabel, hexAddress);\n      }\n    };\n\n    replace(libraryName);\n    replace(libraryHashPlaceholder(libraryName));\n  }\n\n  return bytecode;\n};\n\nvar findLinkReferences = function (bytecode) {\n  // find 40 bytes in the pattern of __...<36 digits>...__\n  // e.g. __Lib.sol:L_____________________________\n  var linkReferences = {};\n  var offset = 0;\n  while (true) {\n    var found = bytecode.match(/__(.{36})__/);\n    if (!found) {\n      break;\n    }\n\n    var start = found.index;\n    // trim trailing underscores\n    // NOTE: this has no way of knowing if the trailing underscore was part of the name\n    var libraryName = found[1].replace(/_+$/gm, '');\n\n    if (!linkReferences[libraryName]) {\n      linkReferences[libraryName] = [];\n    }\n\n    linkReferences[libraryName].push({\n      // offsets are in bytes in binary representation (and not hex)\n      start: (offset + start) / 2,\n      length: 20\n    });\n\n    offset += start + 20;\n\n    bytecode = bytecode.slice(start + 20);\n  }\n  return linkReferences;\n};\n\nmodule.exports = {\n  linkBytecode: linkBytecode,\n  findLinkReferences: findLinkReferences\n};\n","map":{"mappings":[{"source":"node_modules/solc/linker.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/solc/linker.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/solc/linker.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/solc/linker.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/solc/linker.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/solc/linker.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/solc/linker.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/solc/linker.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/solc/linker.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/solc/linker.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/solc/linker.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/solc/linker.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/solc/linker.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/solc/linker.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/solc/linker.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/solc/linker.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/solc/linker.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/solc/linker.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/solc/linker.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/solc/linker.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/solc/linker.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/solc/linker.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/solc/linker.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/solc/linker.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/solc/linker.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/solc/linker.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/solc/linker.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/solc/linker.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/solc/linker.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/solc/linker.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/solc/linker.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/solc/linker.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/solc/linker.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/solc/linker.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/solc/linker.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/solc/linker.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/solc/linker.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/solc/linker.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/solc/linker.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/solc/linker.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/solc/linker.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/solc/linker.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/solc/linker.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/solc/linker.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/solc/linker.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/solc/linker.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/solc/linker.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/solc/linker.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/solc/linker.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/solc/linker.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/solc/linker.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/solc/linker.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/solc/linker.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/solc/linker.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/solc/linker.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/solc/linker.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/solc/linker.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/solc/linker.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/solc/linker.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/solc/linker.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/solc/linker.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/solc/linker.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/solc/linker.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/solc/linker.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/solc/linker.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/solc/linker.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/solc/linker.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/solc/linker.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/solc/linker.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/solc/linker.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/solc/linker.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/solc/linker.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/solc/linker.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/solc/linker.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/solc/linker.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/solc/linker.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/solc/linker.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/solc/linker.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/solc/linker.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/solc/linker.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/solc/linker.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/solc/linker.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/solc/linker.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/solc/linker.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/solc/linker.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/solc/linker.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/solc/linker.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/solc/linker.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/solc/linker.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/solc/linker.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/solc/linker.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/solc/linker.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/solc/linker.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/solc/linker.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/solc/linker.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}}],"sources":{"node_modules/solc/linker.js":"var keccak = require('keccak');\n\nfunction keccak256 (input) {\n  return keccak('keccak256').update(input).digest();\n}\n\nfunction libraryHashPlaceholder (input) {\n  return '$' + keccak256(input).toString('hex').slice(0, 34) + '$';\n}\n\nvar linkBytecode = function (bytecode, libraries) {\n  // NOTE: for backwards compatibility support old compiler which didn't use file names\n  var librariesComplete = {};\n  for (var libraryName in libraries) {\n    if (typeof libraries[libraryName] === 'object') {\n      // API compatible with the standard JSON i/o\n      for (var lib in libraries[libraryName]) {\n        librariesComplete[lib] = libraries[libraryName][lib];\n        librariesComplete[libraryName + ':' + lib] = libraries[libraryName][lib];\n      }\n    } else {\n      // backwards compatible API for early solc-js versions\n      var parsed = libraryName.match(/^([^:]+):(.+)$/);\n      if (parsed) {\n        librariesComplete[parsed[2]] = libraries[libraryName];\n      }\n      librariesComplete[libraryName] = libraries[libraryName];\n    }\n  }\n\n  for (libraryName in librariesComplete) {\n    var hexAddress = librariesComplete[libraryName];\n    if (hexAddress.slice(0, 2) !== '0x' || hexAddress.length > 42) {\n      throw new Error('Invalid address specified for ' + libraryName);\n    }\n    // remove 0x prefix\n    hexAddress = hexAddress.slice(2);\n    hexAddress = Array(40 - hexAddress.length + 1).join('0') + hexAddress;\n\n    // Support old (library name) and new (hash of library name)\n    // placeholders.\n    var replace = function (name) {\n      // truncate to 37 characters\n      var truncatedName = name.slice(0, 36);\n      var libLabel = '__' + truncatedName + Array(37 - truncatedName.length).join('_') + '__';\n      while (bytecode.indexOf(libLabel) >= 0) {\n        bytecode = bytecode.replace(libLabel, hexAddress);\n      }\n    };\n\n    replace(libraryName);\n    replace(libraryHashPlaceholder(libraryName));\n  }\n\n  return bytecode;\n};\n\nvar findLinkReferences = function (bytecode) {\n  // find 40 bytes in the pattern of __...<36 digits>...__\n  // e.g. __Lib.sol:L_____________________________\n  var linkReferences = {};\n  var offset = 0;\n  while (true) {\n    var found = bytecode.match(/__(.{36})__/);\n    if (!found) {\n      break;\n    }\n\n    var start = found.index;\n    // trim trailing underscores\n    // NOTE: this has no way of knowing if the trailing underscore was part of the name\n    var libraryName = found[1].replace(/_+$/gm, '');\n\n    if (!linkReferences[libraryName]) {\n      linkReferences[libraryName] = [];\n    }\n\n    linkReferences[libraryName].push({\n      // offsets are in bytes in binary representation (and not hex)\n      start: (offset + start) / 2,\n      length: 20\n    });\n\n    offset += start + 20;\n\n    bytecode = bytecode.slice(start + 20);\n  }\n  return linkReferences;\n};\n\nmodule.exports = {\n  linkBytecode: linkBytecode,\n  findLinkReferences: findLinkReferences\n};\n"},"lineCount":95}},"hash":"760fd07e5a1f8167f8d45cd4010779d3","cacheData":{"env":{}}}